import boto3

def lambda_handler(event, context):
    # AWS SES configuration
    ses_region = 'us-west-2'  # Replace with your SES region
    sender_email = 'sender@example.com'  # Replace with your sender email address
    recipient_email = 'recipient@example.com'  # Replace with your recipient email address

    # AWS CloudTrail configuration
    trail_name = 'my-cloudtrail'  # Replace with your CloudTrail trail name

    # AWS IAM configuration
    tag_key = 'my-tag-key'  # Replace with your desired tag key

    # Initialize AWS clients
    cloudtrail = boto3.client('cloudtrail')
    iam = boto3.client('iam')
    ses = boto3.client('ses', region_name=ses_region)

    # Retrieve CloudTrail events
    response = cloudtrail.lookup_events(LookupAttributes=[{'AttributeKey': 'EventName', 'AttributeValue': 'CreateCluster'}],
                                        MaxResults=50)  # Adjust MaxResults as needed

    cluster_creations = []
    for event in response['Events']:
        resources = event['Resources']
        for resource in resources:
            if resource['ResourceType'] == 'AWS::EMR::Cluster':
                event_username = event['Username']

                # Retrieve the role used for creating the cluster
                role_arn = resource['ARN']
                role_name = role_arn.split('/')[-1]
                role_response = iam.get_role(RoleName=role_name)
                role_tags = role_response['Role']['Tags']

                # Check if the role has the desired tag
                role_has_tag = any(tag['Key'] == tag_key for tag in role_tags)

                cluster_creation_info = {
                    'EventTime': str(event['EventTime']),
                    'EventUsername': event_username,
                    'RoleName': role_name,
                    'RoleHasTag': role_has_tag
                }
                cluster_creations.append(cluster_creation_info)

    # Create email report body
    email_body = "Cluster Creation Report:\n\n"
    for cluster in cluster_creations:
        email_body += f"Event Time: {cluster['EventTime']}\n"
        email_body += f"Event Username: {cluster['EventUsername']}\n"
        email_body += f"Role Name: {cluster['RoleName']}\n"
        email_body += f"Role Has Tag: {cluster['RoleHasTag']}\n"
        email_body += "---------------------------------------------\n"

    # Send email using AWS SES
    email_subject = "Cluster Creation Report"
    response = ses.send_email(
        Source=sender_email,
        Destination={
            'ToAddresses': [recipient_email]
        },
        Message={
            'Subject': {'Data': email_subject},
            'Body': {'Text': {'Data': email_body}}
        }
    )

    return {
        'statusCode': 200,
        'body': 'Email sent successfully!'
    }
