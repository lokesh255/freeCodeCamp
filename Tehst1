import boto3
from datetime import datetime, timedelta

def send_email(subject, body):
    ses_client = boto3.client('ses', region_name='us-west-2')  # Replace with your desired AWS region

    # Replace with your email addresses
    sender_email = 'sender@example.com'
    recipient_email = 'recipient@example.com'

    # Create the email message
    email_message = {
        'Subject': {'Data': subject},
        'Body': {'Text': {'Data': body}},
    }

    # Send the email
    response = ses_client.send_email(
        Source=sender_email,
        Destination={'ToAddresses': [recipient_email]},
        Message=email_message
    )

    print('Email sent successfully')
    print('Message ID:', response['MessageId'])


def lambda_handler(event, context):
    # Prepare the email body
    body = 'S3 Bucket Creation Report:\n\n'

    # Calculate the date 6 months ago from the current date
    six_months_ago = datetime.now() - timedelta(days=180)

    for record in event.get('Records', []):
        event_time = record.get('eventTime', '')
        if event_time:
            event_timestamp = datetime.strptime(event_time, '%Y-%m-%dT%H:%M:%SZ')
            # Filter records for the past 6 months
            if event_timestamp >= six_months_ago:
                user_identity = record.get('userIdentity', {})
                username = user_identity.get('userName', '')
                assume_role_arn = user_identity.get('sessionContext', {}).get('sessionIssuer', {}).get('arn', '')
                region = record.get('awsRegion', '')
                event_name = record.get('eventName', '')

                body += f'Event Name: {event_name}\n'
                body += f'Username: {username}\n'
                body += f'Assumed Role: {assume_role_arn}\n'
                body += f'Region: {region}\n'
                body += '---\n'

    # Send the email
    subject = 'S3 Bucket Creation Report'
    send_email(subject, body)
