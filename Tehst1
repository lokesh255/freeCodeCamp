import boto3
import json

def get_tags(resource_arn):
    client = boto3.client('resourcegroupstaggingapi')
    response = client.get_resources(ResourceArns=[resource_arn])
    tags = response['ResourceTagMappingList'][0]['Tags']
    return tags

def lambda_handler(event, context):
    # Assuming 'event' contains information about the event
    # Extract relevant fields from the event
    event_name = event['eventName']
    user_identity = event['userIdentity']
    arn = user_identity['arn']
    principal_id = user_identity['principalId']
    session_issuer = user_identity.get('sessionContext', {}).get('sessionIssuer', {})
    session_issuer_user_name = session_issuer.get('userName', None)
    
    # Check if session issuer user name has tags
    session_issuer_user_tags = {}
    if session_issuer_user_name:
        session_issuer_user_tags = get_tags(arn)
    
    # Gather information about functions, buckets, services, etc.
    # ... (Implement this part based on your use case)
    
    # Create a table with the collected information
    table = f"Event Name: {event_name}\n"
    table += f"Principal ID: {principal_id}\n"
    table += f"ARN: {arn}\n"
    table += f"Session Issuer User Name: {session_issuer_user_name}\n"
    if session_issuer_user_tags:
        table += f"Session Issuer User Tags:\n"
        for key, value in session_issuer_user_tags.items():
            table += f"  {key}: {value}\n"
    
    # ... (Add information about functions, buckets, services, roles, etc.)
    
    # Sending an email using Amazon SES
    # ... (Implement this part based on sending emails using SES)
    
    return {
        'statusCode': 200,
        'body': 'Event processing completed successfully.'
    }
