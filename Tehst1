import boto3

def lambda_handler(event, context):
    # Configure your AWS region and SES client
    region = 'your_aws_region'
    ses_client = boto3.client('ses', region_name=region)
    
    # Specify the event name you want to filter for
    event_name_filter = 'CreateFunction'

    # Initialize the CloudTrail client
    cloudtrail_client = boto3.client('cloudtrail', region_name=region)

    # Use the lookup_events API to retrieve the events
    response = cloudtrail_client.lookup_events(
        LookupAttributes=[
            {
                'AttributeKey': 'EventName',
                'AttributeValue': event_name_filter
            }
        ]
    )
    
    # Extract required event details and store them in a list of strings (rows of the table)
    table_rows = []
    for event_data in response['Events']:
        event_name = event_data['EventName']
        user_identity_arn = event_data.get('UserIdentity', {}).get('Arn', 'N/A')
        user_name = event_data.get('Username', 'N/A')
        creation_date = event_data['EventTime']
        function_name = event_data['Resources'][0]['ResourceName']
        table_row = f"Event Name: {event_name}, User Identity ARN: {user_identity_arn}, User Name: {user_name}, Creation Date: {creation_date}, Function Name: {function_name}"
        table_rows.append(table_row)

    # Create the table by joining the rows with newlines
    table = '\n'.join(table_rows)
    
    # Send email using SES with the table in the email body
    sender_email = 'your_sender_email'
    recipient_email = 'your_recipient_email'
    subject = 'CloudTrail Event Report'
    body = f"CloudTrail events with EventName '{event_name_filter}':\n\n{table}"
    
    try:
        ses_client.send_email(
            Source=sender_email,
            Destination={'ToAddresses': [recipient_email]},
            Message={
                'Subject': {'Data': subject},
                'Body': {'Text': {'Data': body}},
            }
        )
        return {
            'statusCode': 200,
            'body': 'Email sent successfully.'
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': f'Error sending email: {str(e)}'
        }
